#include<stdio.h>
#include <math.h>
#include "strings.h"

void enterBetweenWord();

int static binarToDec(int num);
int static decToBin(int num);

char*  bigInts(char* num1,char* num2);  /*static - compile error*/

char* squeeze(char* s1,char* s2);  /*static - compile error*/

int static any(char* str1,char* str2);

char* reverseStr(char* str);    /*static - compile error*/

/*------------------------------------------------------------------------------------------------------------------*/




/*-----------------------------------------------------11111111111111111---------------------------------------------*/



void enterBetweenWord(){
	
	char str[500];
	int len; 
	int i = 0;
	char c;

	printf("Enter a sentence : ");

	while((c=getchar())!='\n'){
		if(c==' ')
			str[i]='\n';	
		else	
			str[i]=c;
		i++;
	} 
	str[i]='\0';
	
	printf("%s\n",&str);

}

/*----------------------decBin-------------------------------22222222222222222---------------------------------------------*/



int static binarToDec(int binarNum){
	int num=0;
	int i=0;
	int mul=0;

	while(binarNum>0)
	{
		mul = pow(2,i);
		num+=(binarNum%10)*mul;
		binarNum = binarNum/10;
		i++;
	} 
	
	return num;
	
}




int static decToBin(int num){
	char bit;
	int i=0;
	char *resultStr = (char*)malloc(32*sizeof(char));	
	
	while(num>0){
		bit=(num % 2)+'0';
		num = num/2;	
		resultStr[i]=bit;	
		i++;
	}
	resultStr[i]='\0';
	
	resultStr=reverseStr(resultStr);

	return atoi(resultStr);
}



char* reverseStr(char* str){
	int i=0;
	char c;	
	int len = strlen(str) - 1;

	while(i <= len/2){
		c=str[len-i];
		str[len-i] = str[i];
		str[i] = c;
		i++;
	}

	return str;
}

/*---------------------BigInt--------------------------------333333333333---------------------------------------------*/



char* bigInts(char* num1 , char* num2){

	int len1,len2,min,max,first;
	int i=0;
	char *res =  (char*)malloc(500*sizeof(char));;
	int sum;
	int plus=0;
	char c;

	len1 = strlen(num1);
	len2 = strlen(num2);
	
	min = (len1>len2)?(len2):(len1);
	max = (len1>len2)?(len1):(len2);
	/*printf("min : %d  \n",min);*/	

	while(i<min){
		sum = (num1[len1-i-1]-'0') + (num2[len2-i-1]-'0') + plus; 
			
		if(sum>9){
			first = sum - 10;
			plus = 1;
		}else{
			first = sum;
			plus = 0;
		}
		
		c=first+'0';
	
		res[i]= c;
		i++;
	}
	
	while(i<max){
		if(len1>len2)
			res[i]=num1[i];
		else
			res[i]=num2[i];
		i++;
	} 

	res[i] = '\0';
	
	res = reverseStr(res);
	
	
	return res;	

}

/*-----------------------------------------------------4444444444444---------------------------------------------*/




char* squeeze(char* s1,char* s2){
	int i=0,j=0;	
	int hashTable[256] = {0};	
	char res[500];	
		
	while(s2[i]!='\0'){
		hashTable[(s2[i])] = 1;
		i++;
	}
	
	i=0;
	while(s1[i]!='\0'){
		if(hashTable[(s1[i])] != 1){
			res[j] = s1[i]; 	
			j++;
		}	
		i++;
	}
	
	res[j] = '\0';		
	
	printf("%s\n",&res);	
	return res;

} 


/*-----------------------------------------------------555555555555555---------------------------------------------*/




int static any(char* str1,char* str2){
	int i=0,j=0;
	int toRet = -1;	
	
	if(str2[0]=='\0')
		return -1;

	while(str1[i] != '\0'){
		for(j=0;str2[j]!='\0';j++){
			if(str1[i+j] != str2[j]){
				break;			
			}
		}
		if(str2[j] == '\0'){
			toRet = i;
			break;
		}
		i++;
	}
	
	return toRet;
}






